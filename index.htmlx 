<!DOCTYPE html>
<html lang="id">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Emoji Gacha 🎲</title>
<style>
  /* ===== Base UI (halaman normal) ===== */
  :root{
    --bg1:#e6f0ff;  /* biru muda */
    --bg2:#ffffff;  /* putih */
    --bg3:#ffd6f0;  /* pink terang */
    --bg4:#c8fbff;  /* cyan terang */
    --ink:#333;
    --brand:#6c3bff;
  }

  html,body{
    height:100%;
  }
  body{
    margin:0;
    font-family: system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, 'Helvetica Neue', Arial, Noto Sans, 'Apple Color Emoji','Segoe UI Emoji';
    color:var(--ink);
    /* gradien statis full layar (tidak ikut geser saat konten berubah) */
    background:
      radial-gradient(55% 70% at 20% 10%, var(--bg1), transparent 65%),
      radial-gradient(60% 65% at 90% 0%,  var(--bg3), transparent 60%),
      radial-gradient(70% 70% at 30% 100%, var(--bg4), transparent 60%),
      linear-gradient(135deg, #f7faff 0%, #fefefe 100%);
    background-attachment: fixed,fixed,fixed,fixed; /* kunci */
  }

  .container{
    max-width:900px;
    margin-inline:auto;
    padding:32px 18px 80px;
  }
  h1{
    text-align:center;
    font-size: clamp(28px, 5vw, 44px);
    margin: 4px 0 8px;
  }
  p.lead{
    text-align:center;
    margin:0 0 22px;
    opacity:.8;
  }

  .card{
    background:#fff;
    max-width: 720px;
    margin: 0 auto;
    padding: 26px 20px 34px;
    border-radius: 18px;
    box-shadow: 0 10px 30px rgba(0,0,0,.12);
    position: relative;
  }
  .cta{
    display:block;
    margin: 0 auto 18px;
    padding: 12px 26px;
    border-radius: 12px;
    border: none;
    font-size: 18px;
    background: var(--brand);
    color:#fff;
    cursor:pointer;
    box-shadow: 0 8px 18px rgba(108,59,255,.35);
    transition: transform .06s ease, filter .2s ease, opacity .2s ease;
  }
  .cta:disabled{
    opacity:.55;
    cursor:not-allowed;
    filter:grayscale(.2);
  }
  .cta:not(:disabled):active{ transform: translateY(1px) scale(.99); }

  .emoji-big{
    font-size: clamp(56px, 12vw, 96px);
    text-align:center;
    user-select:none;
    transform: translateZ(0);
    will-change: transform, opacity;
  }
  .msg{
    text-align:center;
    font-size: clamp(16px, 3.6vw, 22px);
    margin-top: 6px;
  }
  .fade-in{ animation: fadeIn .45s ease both; }
  @keyframes fadeIn{ from{opacity:0; transform: translateY(6px)} to{opacity:1; transform:none} }

  /* ===== Mini stage khusus saat 🎁 keluar (animasi kotak terbuka) ===== */
  .gift-stage{
    position:relative;
    height:160px;
    margin-top:8px;
  }
  .gift{
    position:absolute; inset:0;
    display:grid; place-items:center;
    font-size: clamp(70px, 14vw, 110px);
  }
  .gift.shake{ animation: shake .6s ease both; }
  @keyframes shake{
    0%{ transform:translate(0,0) rotate(0deg) }
    20%{ transform:translate(-4px,2px) rotate(-4deg) }
    40%{ transform:translate(5px,-2px) rotate(3deg) }
    60%{ transform:translate(-3px,1px) rotate(-2deg) }
    80%{ transform:translate(3px,-1px) rotate(2deg) }
    100%{ transform:none }
  }

  /* Kotak CSS sebagai “terbuka” (bukan emoji) */
  .box{
    position:absolute; left:50%; top:50%;
    width:170px; height:90px;
    transform: translate(-50%,-20%);
    background: linear-gradient(#ff3b3b, #c31432);
    border-radius: 6px 6px 10px 10px;
    box-shadow: 0 16px 40px rgba(0,0,0,.35);
  }
  .box .lid{
    position:absolute; left:0; top:-36px;
    width:100%; height:36px;
    background: linear-gradient(#111, #2c0000);
    border-radius: 8px 8px 0 0;
    transform-origin: left bottom;
  }
  .box.open .lid{ animation: lidOpen .9s cubic-bezier(.2,.8,.2,1) forwards; }
  @keyframes lidOpen{
    0%{ transform: rotate(0deg) }
    40%{ transform: rotate(-25deg) }
    100%{ transform: rotate(-70deg) }
  }

  .rays{
    position:absolute; left:50%; top:0;
    transform:translateX(-50%);
    width:220px; height:120px;
    pointer-events:none;
    opacity:0; filter: drop-shadow(0 6px 12px rgba(255,230,120,.55));
  }
  .box.open + .rays{ animation: rays .9s .2s ease-out forwards; }
  @keyframes rays{
    from{ opacity:0; transform: translate(-50%, 10px) scale(.9) }
    to{ opacity:1; transform: translate(-50%, 0) scale(1) }
  }

  /* ====== MODE PRANK (full screen overlay) ====== */
  #prank{
    position: fixed; inset:0; z-index: 9999;
    display:none;
    background: #000;
    color:#f33;
    overflow:hidden;
    font-family: ui-monospace, SFMono-Regular, Menlo, Consolas, "Liberation Mono", monospace;
  }
  #prank.show{ display:block; }

  /* Background berkedip merah-hitam */
  #prank::before{
    content:"";
    position:absolute; inset:0;
    background:
      repeating-linear-gradient(0deg, rgba(0,0,0,.0) 0 2px, rgba(255,0,0,.05) 2px 4px),
      radial-gradient(1200px 500px at 50% 50%, #190000 0%, #000 55%);
    animation: bgPulse 1.2s steps(2,end) infinite;
    mix-blend-mode: screen;
  }
  @keyframes bgPulse{
    0%,49%{ background-color:#000 }
    50%,100%{ background-color:#1a0000 }
  }

  /* Lapisan glitch RGB */
  .glitch{
    position:absolute; inset:0;
    display:grid; place-items:center;
    font-size: clamp(38px, 9vw, 90px);
    letter-spacing:.06em;
    text-transform:uppercase;
    font-weight:800;
    color:#eee;
    text-shadow:
      2px 0 0 #ff0033,
      -2px 0 0 #00e5ff;
    animation: gShift 1.1s infinite;
    opacity:.13;
    user-select:none;
    pointer-events:none;
  }
  @keyframes gShift{
    0%{ transform:translate(0,0) }
    20%{ transform:translate(2px,-1px) }
    40%{ transform:translate(-1px,1px) }
    60%{ transform:translate(3px,0) }
    80%{ transform:translate(-2px,2px) }
    100%{ transform:translate(0,0) }
  }

  /* “salju” noise garis acak */
  .slices{
    position:absolute; inset:0;
    mix-blend-mode: lighten;
    pointer-events:none;
  }
  .slice{
    position:absolute; left:0; width:100%;
    height:2px; background:linear-gradient(90deg, transparent, #f00, transparent);
    opacity:.35;
    animation: sliceMove 1.4s linear infinite;
  }
  @keyframes sliceMove{
    from{ transform: translateX(-10%) }
    to{ transform: translateX(10%) }
  }

  /* Teks acak */
  .noise{
    position:absolute; inset:0; pointer-events:none;
    filter: blur(.2px);
  }
  .rand{
    position:absolute; white-space:nowrap; font-size:12px;
    color:#f88;
    opacity:.7;
    animation: floaty 3s ease-in-out infinite alternate;
  }
  @keyframes floaty{
    from{ transform: translateY(0) }
    to{ transform: translateY(-10px) }
  }

  /* Tombol keluar prank */
  .exit{
    position:absolute; right:14px; bottom:14px;
    background:#111; color:#fff; border:1px solid #f55;
    padding:10px 14px; border-radius:10px; font-weight:700;
  }

  /* Flash putih sesekali */
  .flash{
    position:absolute; inset:0; background:#fff;
    opacity:0; pointer-events:none;
    animation: flash 2.6s infinite;
  }
  @keyframes flash{
    0%,93%{ opacity:0 }
    94%,96%{ opacity:.12 }
    97%,100%{ opacity:0 }
  }
</style>
</head>
<body>
  <main class="container app">
    <h1>Emoji Gacha 🎲</h1>
    <p class="lead">Klik tombolnya, dapatkan satu emoji random. Hati-hati kalau dapat 🎁 😉</p>

    <section class="card">
      <button id="btn" class="cta">Pencet Sekali</button>

      <div id="stage" class="gift-stage" aria-live="polite">
        <!-- Tempat animasi/emoji -->
      </div>
      <div id="msg" class="msg"></div>
    </section>
  </main>

  <!-- Overlay PRANK -->
  <section id="prank" aria-hidden="true">
    <div class="glitch">system breach</div>
    <div class="slices" id="slices"></div>
    <div class="noise" id="noise"></div>
    <div class="flash"></div>
    <button class="exit" id="exit">Udah, ini cuma prank 😅</button>
  </section>

<script>
/* ================== DATA EMOJI ================== */
/* 8 emoji total, termasuk 🎁 */
const POOL = [
  { e:"💖", t:"Kamu mendapat cinta! ❤️" },
  { e:"🌸", t:"Bunga indah untukmu 🌸" },
  { e:"🎉", t:"Pesta dimulai! 🎉" },
  { e:"😎", t:"Kamu jadi super keren 😎" },
  { e:"✨", t:"Keajaiban akan hadir ✨" },
  { e:"🐱", t:"Seekor kucing imut muncul 🐱" },
  { e:"🔥", t:"Semangat membara! 🔥" },
  { e:"🎁", t:"Hadiah spesial untukmu…" } // trigger prank
];

const btn = document.getElementById('btn');
const stage = document.getElementById('stage');
const msg = document.getElementById('msg');

btn.addEventListener('click', gacha, { once:true });

function gacha(){
  // pilih acak
  const pick = POOL[Math.floor(Math.random()*POOL.length)];

  // tampilkan hasil
  stage.innerHTML = `<div class="emoji-big fade-in">${pick.e}</div>`;
  msg.textContent  = pick.t;

  // kalau bukan 🎁, selesai
  if(pick.e !== "🎁") return;

  // kalau 🎁 → jalankan animasi hadiah lalu prank
  playGiftSequence().then(startPrank);
}

/* ====== 1) ANIMASI HADIAH TERBUKA ====== */
function playGiftSequence(){
  return new Promise(res=>{
    // tahap 1: emoji 🎁 goyang
    stage.innerHTML = `<div class="gift shake" aria-hidden="true">🎁</div>`;
    msg.textContent = "Hadiah terbuka…";

    // setelah goyang, render kotak CSS dan buka tutupnya
    setTimeout(()=>{
      stage.innerHTML = `
        <div class="box" id="cssBox">
          <div class="lid"></div>
        </div>
        <svg class="rays" viewBox="0 0 220 120" aria-hidden="true">
          <defs>
            <linearGradient id="g" x1="0" x2="0" y1="0" y2="1">
              <stop stop-color="#fff59d" offset="0"/>
              <stop stop-color="#ffab40" offset="1"/>
            </linearGradient>
          </defs>
          <g fill="url(#g)" opacity=".95">
            <polygon points="110,0 120,70 100,70"/>
            <polygon points="60,10 70,70 50,70"/>
            <polygon points="160,10 170,70 150,70"/>
            <polygon points="20,30 35,70 10,70"/>
            <polygon points="200,30 210,70 185,70"/>
          </g>
        </svg>
      `;
      const box = document.getElementById('cssBox');
      box.classList.add('open');
      // selesai dalam ~1.1s → resolve
      setTimeout(res, 1100);
    }, 620);
  });
}

/* ====== 2) MODE PRANK: GLITCH + TEKS ACAK + SUARA ====== */
const prank = document.getElementById('prank');
const slices = document.getElementById('slices');
const noise  = document.getElementById('noise');
const exitBtn= document.getElementById('exit');

let audioCtx, beeper, beepTimer, textTimer, sliceTimer;

function startPrank(){
  // sembunyikan app, tampilkan overlay
  document.querySelector('.app').style.display='none';
  prank.classList.add('show');
  prank.setAttribute('aria-hidden','false');

  // spawn garis glitch (slice)
  sliceTimer = setInterval(()=>{
    const s = document.createElement('div');
    s.className='slice';
    s.style.top = Math.floor(Math.random()*100)+'%';
    s.style.animationDuration = (0.8 + Math.random()*1.2)+'s';
    s.style.opacity = (0.15 + Math.random()*0.5);
    slices.appendChild(s);
    // auto bersih
    setTimeout(()=>s.remove(), 1800);
  }, 60);

  // teks acak bertaburan
  textTimer = setInterval(()=>{
    const r = document.createElement('div');
    r.className='rand';
    r.style.left = Math.floor(Math.random()*100)+'%';
    r.style.top  = Math.floor(Math.random()*100)+'%';
    r.style.fontSize = (10 + Math.random()*16)+'px';
    r.style.opacity = (0.35 + Math.random()*0.6);
    r.textContent = randomGarble();
    noise.appendChild(r);
    setTimeout(()=>r.remove(), 4000);
  }, 45);

  // audio alarm via Web Audio API (butuh gesture → sudah terpenuhi)
  try{
    audioCtx = new (window.AudioContext||window.webkitAudioContext)();
    makeAlarm(audioCtx);
  }catch(e){ /* kalau gagal, diam saja */ }

  // tombol keluar prank
  exitBtn.addEventListener('click', stopPrank, { once:true });
}

function stopPrank(){
  prank.classList.remove('show');
  // matikan interval
  [sliceTimer, textTimer].forEach(t=>clearInterval(t));
  // hentikan audio
  if(beeper){ beeper.stop(); beeper.disconnect(); }
  if(audioCtx){ audioCtx.close(); }
  // reload ringan biar UI balik seperti semula
  location.reload();
}

/* Generator teks acak */
function randomGarble(){
  const pools = "01<>[]{}#$%&@*=+ABCDEFGHIJKLMNOPQRSTUVWXYZ";
  let out = "";
  const len = 18 + Math.floor(Math.random()*28);
  for(let i=0;i<len;i++){
    out += pools[Math.floor(Math.random()*pools.length)];
  }
  return out;
}

/* Sirene/beep sederhana */
function makeAlarm(ctx){
  beeper = ctx.createOscillator();
  const gain = ctx.createGain();
  beeper.type = "square";
  beeper.connect(gain).connect(ctx.destination);
  gain.gain.value = 0.0001;
  beeper.start();

  // pola naik-turun
  let up = true;
  beepTimer = setInterval(()=>{
    beeper.frequency.setValueAtTime(up? 880: 440, ctx.currentTime);
    gain.gain.cancelScheduledValues(ctx.currentTime);
    gain.gain.setTargetAtTime(0.12, ctx.currentTime, 0.015);
    setTimeout(()=> gain.gain.setTargetAtTime(0.0001, ctx.currentTime, 0.05), 180);
    up = !up;
  }, 260);
}
</script>
</body>
</html>


